<?php

/**
 * BasePhoto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $category_id
 * @property string $name
 * @property string $location
 * @property string $description
 * @property string $token
 * @property boolean $is_public
 * @property string $path
 * @property Category $Category
 * 
 * @method integer  getCategoryId()  Returns the current record's "category_id" value
 * @method string   getName()        Returns the current record's "name" value
 * @method string   getLocation()    Returns the current record's "location" value
 * @method string   getDescription() Returns the current record's "description" value
 * @method string   getToken()       Returns the current record's "token" value
 * @method boolean  getIsPublic()    Returns the current record's "is_public" value
 * @method string   getPath()        Returns the current record's "path" value
 * @method Category getCategory()    Returns the current record's "Category" value
 * @method Photo    setCategoryId()  Sets the current record's "category_id" value
 * @method Photo    setName()        Sets the current record's "name" value
 * @method Photo    setLocation()    Sets the current record's "location" value
 * @method Photo    setDescription() Sets the current record's "description" value
 * @method Photo    setToken()       Sets the current record's "token" value
 * @method Photo    setIsPublic()    Sets the current record's "is_public" value
 * @method Photo    setPath()        Sets the current record's "path" value
 * @method Photo    setCategory()    Sets the current record's "Category" value
 * 
 * @package    photka
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePhoto extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('photo');
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('location', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('is_public', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('path', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Category', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}