detect_relations: true

sfGuardUserProfile:
  tableName: sf_guard_user_profile
  columns:
    id:
      type: bigint(20)
      primary: true
      autoincrement: true
    user_id:
      type: bigint(20)
      notnull: true
    email:
      type: string(80)
    fullname:
      type: string(80)
    validate:
      type: string(17)
  relations:
    User:
      class: sfGuardUser
      foreign: id
      local: user_id
      type: one  
      onDelete: cascade    
      foreignType: one
      foreignAlias: Profile

Category:
  columns:
    name: { type: string(255), notnull: true, unique: true }
    
CategoryValue:
  columns:
    value: { type: string(255), notnull: true }
    category_id: { type: integer(100), notnull: true }
    is_published: { type: boolean, notnull: true, default: true}
  relations:
    Category: { onDelete: CASCADE, local: category_id, foreign: id, foreignAlias: CategoryValues }
  
PhotoCategoryValue:
  columns:
    photo_id: { type: integer, primary: true }
    category_value_id: { type: integer, primary: true }
  relations:
    Photo:
      local: photo_id
      foreign: id
      foreignAlias: PhotoCategoryValues
    CategoryValue:
      local: category_value_id
      foreign: id
      foreignAlias: PhotoCategoryValues
      
Photo:
  actAs: { Timestampable: ~ }
  columns:
    name:         { type: string(255) }
    location:     { type: string(255), notnull: true }
    description:  { type: string(4000), notnull: true }
    is_public:    { type: boolean, notnull: true, default: 0 }
    path:        { type: string(255), notnull: true }
    user_id:     { type: integer(1000), notnull: false}
  relations:
    CategoryValues: 
      class: CategoryValue
      foreignAlias: Photos
      refClass: PhotoCategoryValue
      local: photo_id
      foreign: category_value_id
    sfGuardUser:
      onDelete: CASCADE
      local:  user_id
      foreign: id
      foreignAlias:  Photos